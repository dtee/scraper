// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringDao.vsl in andromda-spring-cartridge.
//
package com.ten45.entity.aggregation;

/**
 * @see com.ten45.entity.aggregation.CrawlSession
 */
public interface CrawlSessionDao
    extends com.ten45.entity.EntityDao
{

    /**
     * Loads an instance of com.ten45.entity.aggregation.CrawlSession from the persistent store.
     */
    public com.ten45.entity.aggregation.CrawlSession load(java.lang.Long id);

    /**
     * <p>
     *   Does the same thing as {@link #load(java.lang.Long)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   the returned entity will <strong>NOT</strong> be transformed.  If this flag is any of the other constants
     *   defined in this class then the result <strong>WILL BE</strong> passed through an operation which can
     *   optionally transform the entity (into a value object for example).  By default, transformation does
     *   not occur.
     * </p>
     *
     * @param id the identifier of the entity to load.
     * @return either the entity or the object transformed from the entity.
     */
    public Object load(int transform, java.lang.Long id);

    public java.util.List load(final int transform, final java.lang.Long[] id);

    public java.util.List load(final int transform, final java.util.Collection<java.lang.Long> id);

    public java.util.List load(java.lang.Long[] id);

    public java.util.List load(java.util.Collection<java.lang.Long> id);
    /**
     * Loads all entities of type {@link com.ten45.entity.aggregation.CrawlSession}.
     *
     * @return the loaded entities.
     */
    public java.util.Collection loadAll();

    /**
     * <p>
     *   Does the same thing as {@link #loadAll()} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   the returned entity will <strong>NOT</strong> be transformed.  If this flag is any of the other constants
     *   defined here then the result <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entity (into a value object for example).  By default, transformation does
     *   not occur.
     * </p>
     *
     * @param transform the flag indicating what transformation to use.
     * @return the loaded entities.
     */
    public java.util.Collection loadAll(final int transform);

    /**
      * Loads all entities of type {@link com.ten45.entity.aggregation.CrawlSession}.
      *
      * @return the loaded entities.
      */
    public java.util.List loadByCriteria(org.hibernate.criterion.DetachedCriteria criteria);

    /**
     * Creates an instance of com.ten45.entity.aggregation.CrawlSession and adds it to the persistent store.
     */
    public com.ten45.entity.aggregation.CrawlSession create(com.ten45.entity.aggregation.CrawlSession crawlSession);

    /**
     * <p>
     *   Does the same thing as {@link #create(com.ten45.entity.aggregation.CrawlSession)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   the returned entity will <strong>NOT</strong> be transformed.  If this flag is any of the other constants
     *   defined here then the result <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entity (into a value object for example).  By default, transformation does
     *   not occur.
     * </p>
     */
    public Object create(int transform, com.ten45.entity.Entity entity);

    /**
     * Creates a new instance of com.ten45.entity.aggregation.CrawlSession and adds
     * from the passed in <code>entities</code> collection
     *
     * @param entities the collection of com.ten45.entity.aggregation.CrawlSession
     *        instances to create.
     *
     * @return the created instances.
     */
    public java.util.Collection create(java.util.Collection entities);

    /**
     * <p>
     *   Does the same thing as {@link #create(com.ten45.entity.aggregation.CrawlSession)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   the returned entity will <strong>NOT</strong> be transformed.  If this flag is any of the other constants
     *   defined here then the result <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     */
    public java.util.Collection create(int transform, java.util.Collection entities);

    /**
     * <p>
     *   Creates a new <code>com.ten45.entity.aggregation.CrawlSession</code>
     *   instance from <strong>all</strong> attributes and adds it to
     *   the persistent store.
     * </p>
     */
    public com.ten45.entity.aggregation.CrawlSession create(
        java.lang.Integer errorCount,
        java.net.URL siteUrl,
        java.lang.Integer successCount,
        java.util.Date endDate,
        java.util.Date startDate,
        java.lang.Integer crawlType,
        java.lang.Long feedID);

    /**
     * <p>
     *   Does the same thing as {@link #create(java.lang.Integer, java.net.URL, java.lang.Integer, java.util.Date, java.util.Date, java.lang.Integer, java.lang.Long)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   the returned entity will <strong>NOT</strong> be transformed.  If this flag is any of the other constants
     *   defined here then the result <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entity (into a value object for example).  By default, transformation does
     *   not occur.
     * </p>
     */
    public Object create(
        int transform,
        java.lang.Integer errorCount,
        java.net.URL siteUrl,
        java.lang.Integer successCount,
        java.util.Date endDate,
        java.util.Date startDate,
        java.lang.Integer crawlType,
        java.lang.Long feedID);

    /**
     * <p>
     *  Creates a new <code>com.ten45.entity.aggregation.CrawlSession</code>
     *  instance from only <strong>required</strong> properties (attributes
     *  and association ends) and adds it to the persistent store.
     * </p>
     */
    public com.ten45.entity.aggregation.CrawlSession create(
        java.lang.Integer crawlType,
        java.lang.Integer errorCount,
        com.ten45.entity.common.AbstractMerchant merchant,
        java.net.URL siteUrl,
        java.lang.Integer successCount);

    /**
     * <p>
     *   Does the same thing as {@link #create(java.lang.Integer, java.net.URL, java.lang.Integer, java.lang.Integer)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   the returned entity will <strong>NOT</strong be transformed.  If this flag is any of the other constants
     *   defined here then the result <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entity (into a value object for example).  By default, transformation does
     *   not occur.
     * </p>
     */
    public Object create(
        int transform,
        java.lang.Integer crawlType,
        java.lang.Integer errorCount,
        com.ten45.entity.common.AbstractMerchant merchant,
        java.net.URL siteUrl,
        java.lang.Integer successCount);

    /**
     * Updates the <code>crawlSession</code> instance in the persistent store.
     */
    public void update(com.ten45.entity.aggregation.CrawlSession crawlSession);

    /**
     * Updates all instances in the <code>entities</code> collection in the persistent store.
     */
    public void update(java.util.Collection entities);

    /**
     * Removes the instance of com.ten45.entity.aggregation.CrawlSession from the persistent store.
     */
    public void remove(com.ten45.entity.aggregation.CrawlSession crawlSession);

    /**
     * Removes the instance of com.ten45.entity.aggregation.CrawlSession having the given
     * <code>identifier</code> from the persistent store.
     */
    public void remove(java.lang.Long id);

    /**
     * Removes all entities in the given <code>entities<code> collection.
     */
    public void remove(java.util.Collection entities);

    /**
     * 
     */
    public com.ten45.entity.aggregation.CrawlSession findCrawlSession(java.net.URL siteUrl);


    static final com.ten45.basic.Log log = com.ten45.basic.Log.getInstance( CrawlSessionDao.class );
}
