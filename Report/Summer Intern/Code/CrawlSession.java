// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package com.ten45.entity.aggregation;

/**
 * 
 */
public abstract class CrawlSession
    extends com.ten45.entity.EntityImpl
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -1469889689257450393L;




    private java.lang.Integer errorCount;

    /**
     * 
     */
    public java.lang.Integer getErrorCount()
    {
        return this.errorCount;
    }

    public void setErrorCount(java.lang.Integer errorCount)
    {
        this.errorCount = errorCount;
    }


    private java.net.URL siteUrl;

    /**
     * 
     */
    public java.net.URL getSiteUrl()
    {
        return this.siteUrl;
    }

    public void setSiteUrl(java.net.URL siteUrl)
    {
        this.siteUrl = siteUrl;
    }


    private java.lang.Integer successCount;

    /**
     * 
     */
    public java.lang.Integer getSuccessCount()
    {
        return this.successCount;
    }

    public void setSuccessCount(java.lang.Integer successCount)
    {
        this.successCount = successCount;
    }


    private java.util.Date endDate;

    /**
     * 
     */
    public java.util.Date getEndDate()
    {
        return this.endDate;
    }

    public void setEndDate(java.util.Date endDate)
    {
        this.endDate = endDate;
    }


    private java.util.Date startDate;

    /**
     * 
     */
    public java.util.Date getStartDate()
    {
        return this.startDate;
    }

    public void setStartDate(java.util.Date startDate)
    {
        this.startDate = startDate;
    }


    private java.lang.Integer crawlType;

    /**
     * 
     */
    public java.lang.Integer getCrawlType()
    {
        return this.crawlType;
    }

    public void setCrawlType(java.lang.Integer crawlType)
    {
        this.crawlType = crawlType;
    }


    private java.lang.Long feedID;

    /**
     * 
     */
    public java.lang.Long getFeedID()
    {
        return this.feedID;
    }

    public void setFeedID(java.lang.Long feedID)
    {
        this.feedID = feedID;
    }

    private com.ten45.entity.common.AbstractMerchant merchant;

    /**
     * 
     */
    public com.ten45.entity.common.AbstractMerchant getMerchant()
    {
        return this.merchant;
    }

    public void setMerchant(com.ten45.entity.common.AbstractMerchant merchant)
    {
        this.merchant = merchant;
    }

    private java.util.Collection toCrawlElements = new java.util.HashSet();

    /**
     * 
     */
    public java.util.Collection getToCrawlElements()
    {
        return this.toCrawlElements;
    }

    public void setToCrawlElements(java.util.Collection toCrawlElements)
    {
        this.toCrawlElements = toCrawlElements;
    }

    private java.util.Collection crawledElements = new java.util.HashSet();

    /**
     * 
     */
    public java.util.Collection getCrawledElements()
    {
        return this.crawledElements;
    }

    public void setCrawledElements(java.util.Collection crawledElements)
    {
        this.crawledElements = crawledElements;
    }

    /**
     * 
     */
    public abstract void dummy();

    /**
     * Returns <code>true</code> if the argument is an CrawlSession instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof CrawlSession))
        {
            return super.equals(object);
        }
        final CrawlSession that = (CrawlSession)object;
        if ( (this.id == null && that.getId() != null)
                || (this.id != null && that.getId() == null) 
                || (this.id != null && that.getId() != null
                        && !this.id.equals(that.getId())) )
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link com.ten45.entity.aggregation.CrawlSession}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link com.ten45.entity.aggregation.CrawlSession}.
         */
        public static com.ten45.entity.aggregation.CrawlSession newInstance()
        {
            return new com.ten45.entity.aggregation.CrawlSessionImpl();
        }
    }

    protected static final com.ten45.basic.Log log = com.ten45.basic.Log.getInstance( CrawlSession.class );

// HibernateEntity.vsl merge-point
}