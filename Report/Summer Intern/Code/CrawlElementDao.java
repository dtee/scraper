// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringDao.vsl in andromda-spring-cartridge.
//
package com.ten45.entity.aggregation;

/**
 * @see com.ten45.entity.aggregation.CrawlElement
 */
public interface CrawlElementDao
    extends com.ten45.entity.EntityDao
{

    /**
     * Loads an instance of com.ten45.entity.aggregation.CrawlElement from the persistent store.
     */
    public com.ten45.entity.aggregation.CrawlElement load(java.lang.Long id);

    /**
     * <p>
     *   Does the same thing as {@link #load(java.lang.Long)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   the returned entity will <strong>NOT</strong> be transformed.  If this flag is any of the other constants
     *   defined in this class then the result <strong>WILL BE</strong> passed through an operation which can
     *   optionally transform the entity (into a value object for example).  By default, transformation does
     *   not occur.
     * </p>
     *
     * @param id the identifier of the entity to load.
     * @return either the entity or the object transformed from the entity.
     */
    public Object load(int transform, java.lang.Long id);

    public java.util.List load(final int transform, final java.lang.Long[] id);

    public java.util.List load(final int transform, final java.util.Collection<java.lang.Long> id);

    public java.util.List load(java.lang.Long[] id);

    public java.util.List load(java.util.Collection<java.lang.Long> id);
    /**
     * Loads all entities of type {@link com.ten45.entity.aggregation.CrawlElement}.
     *
     * @return the loaded entities.
     */
    public java.util.Collection loadAll();

    /**
     * <p>
     *   Does the same thing as {@link #loadAll()} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   the returned entity will <strong>NOT</strong> be transformed.  If this flag is any of the other constants
     *   defined here then the result <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entity (into a value object for example).  By default, transformation does
     *   not occur.
     * </p>
     *
     * @param transform the flag indicating what transformation to use.
     * @return the loaded entities.
     */
    public java.util.Collection loadAll(final int transform);

    /**
      * Loads all entities of type {@link com.ten45.entity.aggregation.CrawlElement}.
      *
      * @return the loaded entities.
      */
    public java.util.List loadByCriteria(org.hibernate.criterion.DetachedCriteria criteria);

    /**
     * Creates an instance of com.ten45.entity.aggregation.CrawlElement and adds it to the persistent store.
     */
    public com.ten45.entity.aggregation.CrawlElement create(com.ten45.entity.aggregation.CrawlElement crawlElement);

    /**
     * <p>
     *   Does the same thing as {@link #create(com.ten45.entity.aggregation.CrawlElement)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   the returned entity will <strong>NOT</strong> be transformed.  If this flag is any of the other constants
     *   defined here then the result <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entity (into a value object for example).  By default, transformation does
     *   not occur.
     * </p>
     */
    public Object create(int transform, com.ten45.entity.Entity entity);

    /**
     * Creates a new instance of com.ten45.entity.aggregation.CrawlElement and adds
     * from the passed in <code>entities</code> collection
     *
     * @param entities the collection of com.ten45.entity.aggregation.CrawlElement
     *        instances to create.
     *
     * @return the created instances.
     */
    public java.util.Collection create(java.util.Collection entities);

    /**
     * <p>
     *   Does the same thing as {@link #create(com.ten45.entity.aggregation.CrawlElement)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   the returned entity will <strong>NOT</strong> be transformed.  If this flag is any of the other constants
     *   defined here then the result <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     */
    public java.util.Collection create(int transform, java.util.Collection entities);

    /**
     * <p>
     *   Creates a new <code>com.ten45.entity.aggregation.CrawlElement</code>
     *   instance from <strong>all</strong> attributes and adds it to
     *   the persistent store.
     * </p>
     */
    public com.ten45.entity.aggregation.CrawlElement create(
        java.net.URL url,
        java.util.Date lastCrawledDate,
        java.lang.String element,
        java.lang.Long productID);

    /**
     * <p>
     *   Does the same thing as {@link #create(java.net.URL, java.util.Date, java.lang.String, java.lang.Long)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   the returned entity will <strong>NOT</strong> be transformed.  If this flag is any of the other constants
     *   defined here then the result <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entity (into a value object for example).  By default, transformation does
     *   not occur.
     * </p>
     */
    public Object create(
        int transform,
        java.net.URL url,
        java.util.Date lastCrawledDate,
        java.lang.String element,
        java.lang.Long productID);


    /**
     * Updates the <code>crawlElement</code> instance in the persistent store.
     */
    public void update(com.ten45.entity.aggregation.CrawlElement crawlElement);

    /**
     * Updates all instances in the <code>entities</code> collection in the persistent store.
     */
    public void update(java.util.Collection entities);

    /**
     * Removes the instance of com.ten45.entity.aggregation.CrawlElement from the persistent store.
     */
    public void remove(com.ten45.entity.aggregation.CrawlElement crawlElement);

    /**
     * Removes the instance of com.ten45.entity.aggregation.CrawlElement having the given
     * <code>identifier</code> from the persistent store.
     */
    public void remove(java.lang.Long id);

    /**
     * Removes all entities in the given <code>entities<code> collection.
     */
    public void remove(java.util.Collection entities);

    /**
     * <p>
     * load crawl elements
     * </p>
     */
    public java.util.Collection loadCrawlElements(com.ten45.entity.aggregation.CrawlSession crawlSession, boolean isCrawled);

    /**
     * <p>
     *   Does the same thing as {@link #loadCrawlElements(com.ten45.entity.aggregation.CrawlSession, boolean)} with an
     *   additional argument called <code>queryString</code>.  This <code>queryString</code>
     *   argument allows you to override the query string defined in {@link #loadCrawlElements(com.ten45.entity.aggregation.CrawlSession, boolean)}.
     * </p>
     */
    public java.util.Collection loadCrawlElements(String queryString, com.ten45.entity.aggregation.CrawlSession crawlSession, boolean isCrawled);

    /**
     * <p>
     *   Does the same thing as {@link #loadCrawlElements(com.ten45.entity.aggregation.CrawlSession, boolean)} with an
     *   additional flag called <code>transform</code>.  If this flag is set to <code>TRANSFORM_NONE</code> then
     *   finder results will <strong>NOT</strong> be transformed during retrieval.
     *   If this flag is any of the other constants defined here
     *   then finder results <strong>WILL BE</strong> passed through an operation which can optionally
     *   transform the entities (into value objects for example).  By default, transformation does
     *   not occur.
     * </p>
     */
    public java.util.Collection loadCrawlElements(int transform, com.ten45.entity.aggregation.CrawlSession crawlSession, boolean isCrawled);

    /**
     * <p>
     *   Does the same thing as {@link #loadCrawlElements(boolean, com.ten45.entity.aggregation.CrawlSession, boolean)} with an
     *   additional argument called <code>queryString</code>.  This <code>queryString</code>
     *   argument allows you to override the query string defined in {@link #loadCrawlElements(int, com.ten45.entity.aggregation.CrawlSession crawlSession, boolean isCrawled)}.
     * </p>
     */
    public java.util.Collection loadCrawlElements(int transform, String queryString, com.ten45.entity.aggregation.CrawlSession crawlSession, boolean isCrawled);


    static final com.ten45.basic.Log log = com.ten45.basic.Log.getInstance( CrawlElementDao.class );
}
